plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
    maven { url "https://maven.shedaniel.me/" }
}


dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // TODO: this should actually be modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:..." but RER depends on the internal EntryWidget
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modImplementation "dev.architectury:architectury-fabric:${project.architectury_version}"
    modImplementation "dev.architectury:architectury-fabric:${project.architectury_version}"
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
        exclude "module": "fabric-api"
    }

    // Testing purposes: I think there's some sort of conflict?
//    modCompile "arcanemagic:ArcaneMagic:1.0.0:beta3"

//    modCompile "crochet:Crochet:${project.crochet_version}"
//	modCompile "cutscene-api:CutsceneAPI:${project.cutscene_api_version}"
//	modCompile "multiblock-api:MultiBlockAPI:${project.multiblock_api_version}"
//	modCompile "io.github.prospector.silk:SilkAPI:${project.silk_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
